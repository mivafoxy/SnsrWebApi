//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

public class DeviceModel: APIModel {

    public var deviceModelName: String?

    public var deviceModelType: Int?

    public var deviceModelUuid: String?

    public var deviceSerial: String?

    public var objectItems: [ObjectItem]?

    public init(deviceModelName: String? = nil, deviceModelType: Int? = nil, deviceModelUuid: String? = nil, deviceSerial: String? = nil, objectItems: [ObjectItem]? = nil) {
        self.deviceModelName = deviceModelName
        self.deviceModelType = deviceModelType
        self.deviceModelUuid = deviceModelUuid
        self.deviceSerial = deviceSerial
        self.objectItems = objectItems
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: StringCodingKey.self)

        deviceModelName = try container.decodeIfPresent("deviceModelName")
        deviceModelType = try container.decodeIfPresent("deviceModelType")
        deviceModelUuid = try container.decodeIfPresent("deviceModelUuid")
        deviceSerial = try container.decodeIfPresent("deviceSerial")
        objectItems = try container.decodeArrayIfPresent("objectItems")
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: StringCodingKey.self)

        try container.encodeIfPresent(deviceModelName, forKey: "deviceModelName")
        try container.encodeIfPresent(deviceModelType, forKey: "deviceModelType")
        try container.encodeIfPresent(deviceModelUuid, forKey: "deviceModelUuid")
        try container.encodeIfPresent(deviceSerial, forKey: "deviceSerial")
        try container.encodeIfPresent(objectItems, forKey: "objectItems")
    }

    public func isEqual(to object: Any?) -> Bool {
      guard let object = object as? DeviceModel else { return false }
      guard self.deviceModelName == object.deviceModelName else { return false }
      guard self.deviceModelType == object.deviceModelType else { return false }
      guard self.deviceModelUuid == object.deviceModelUuid else { return false }
      guard self.deviceSerial == object.deviceSerial else { return false }
      guard self.objectItems == object.objectItems else { return false }
      return true
    }

    public static func == (lhs: DeviceModel, rhs: DeviceModel) -> Bool {
        return lhs.isEqual(to: rhs)
    }
}
